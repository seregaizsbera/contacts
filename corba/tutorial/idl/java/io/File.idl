/**
 * java/io/File.idl
 * Generated by rmic -idl. Do not edit
 * 20 ноября 2005 г. 14:59:49 GMT+03:00
 */


#ifndef __java_io_FilenameFilter__

module java {
module io {

    abstract valuetype FilenameFilter;

};
};

#endif


#ifndef __java_net_URL__

module java {
module net {

    valuetype URL;

};
};

#endif


#ifndef __java_io_FileFilter__

module java {
module io {

    abstract valuetype FileFilter;

};
};

#endif


#ifndef __java_io_File__

module java {
module io {

    valuetype File;

};
};

#endif

#include "java/io/IOEx.idl"
#include "java/net/MalformedURLEx.idl"
#include "java/lang/Comparable.idl"
#include "java/lang/Object.idl"
#include "org/omg/boxedRMI/java/io/seq1_File.idl"
#include "org/omg/boxedRMI/CORBA/seq1_WStringValue.idl"
#include "orb.idl"

#ifndef __java_io_File__
#define __java_io_File__


module java {
module io {

    custom valuetype File: ::java::lang::Comparable {
    
        private ::CORBA::WStringValue path;
        readonly attribute long prefixLength;
        factory create__CORBA_WStringValue(
            in ::CORBA::WStringValue arg0 );
        factory create__CORBA_WStringValue__CORBA_WStringValue(
            in ::CORBA::WStringValue arg0,
            in ::CORBA::WStringValue arg1 );
        factory create__java_io_File__CORBA_WStringValue(
            in ::java::io::File arg0,
            in ::CORBA::WStringValue arg1 );
        readonly attribute ::CORBA::WStringValue name;
        readonly attribute ::CORBA::WStringValue parent;
        readonly attribute ::java::io::File parentFile;
        readonly attribute ::CORBA::WStringValue path;
        readonly attribute boolean absolute;
        readonly attribute ::CORBA::WStringValue absolutePath;
        readonly attribute ::java::io::File absoluteFile;
        ::CORBA::WStringValue getCanonicalPath( ) raises (
            ::java::io::IOEx );
        ::java::io::File getCanonicalFile( ) raises (
            ::java::io::IOEx );
        ::java::net::URL toURL( ) raises (
            ::java::net::MalformedURLEx );
        boolean canRead( );
        boolean canWrite( );
        boolean exists( );
        readonly attribute boolean directory;
        readonly attribute boolean file_;
        readonly attribute boolean hidden;
        long long lastModified( );
        long long length( );
        boolean createNewFile( ) raises (
            ::java::io::IOEx );
        boolean delete( );
        void deleteOnExit( );
        ::org::omg::boxedRMI::CORBA::seq1_WStringValue list__( );
        ::org::omg::boxedRMI::CORBA::seq1_WStringValue list__java_io_FilenameFilter(
            in ::java::io::FilenameFilter arg0 );
        ::org::omg::boxedRMI::java::io::seq1_File listFiles__( );
        ::org::omg::boxedRMI::java::io::seq1_File listFiles__java_io_FilenameFilter(
            in ::java::io::FilenameFilter arg0 );
        ::org::omg::boxedRMI::java::io::seq1_File listFiles__java_io_FileFilter(
            in ::java::io::FileFilter arg0 );
        boolean mkdir( );
        boolean mkdirs( );
        boolean renameTo(
            in ::java::io::File arg0 );
        boolean setLastModified(
            in long long arg0 );
        boolean setReadOnly( );
        ::org::omg::boxedRMI::java::io::seq1_File listRoots( );
        ::java::io::File createTempFile__CORBA_WStringValue__CORBA_WStringValue__java_io_File(
            in ::CORBA::WStringValue arg0,
            in ::CORBA::WStringValue arg1,
            in ::java::io::File arg2 ) raises (
            ::java::io::IOEx );
        ::java::io::File createTempFile__CORBA_WStringValue__CORBA_WStringValue(
            in ::CORBA::WStringValue arg0,
            in ::CORBA::WStringValue arg1 ) raises (
            ::java::io::IOEx );
        long compareTo__java_io_File(
            in ::java::io::File arg0 );
        boolean equals(
            in ::java::lang::_Object arg0 );
        long hashCode( );
        ::CORBA::WStringValue toString( );
    
    };

#pragma ID File "RMI:java.io.File:3E6784E40A53B129:042DA4450E0DE4FF"

};
};

#include "java/io/FilenameFilter.idl"
#include "java/net/URL.idl"
#include "java/io/FileFilter.idl"
#include "java/io/File.idl"
#endif

