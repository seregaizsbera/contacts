/**
 * java/math/MutableBigInteger.idl
 * Generated by rmic -idl. Do not edit
 * 20 ноября 2005 г. 14:59:49 GMT+03:00
 */


#ifndef __java_math_MutableBigInteger__

module java {
module math {

    abstract valuetype MutableBigInteger;

};
};

#endif

#include "org/omg/boxedRMI/seq1_long.idl"
#include "orb.idl"

#ifndef __java_math_MutableBigInteger__
#define __java_math_MutableBigInteger__


module java {
module math {

    abstract valuetype MutableBigInteger {
    
        void clear( );
        void reset( );
        long compare(
            in ::java::math::MutableBigInteger arg0 );
        void normalize( );
        ::org::omg::boxedRMI::seq1_long toIntArray( );
        void setInt(
            in long arg0,
            in long arg1 );
        void setValue(
            in ::org::omg::boxedRMI::seq1_long arg0,
            in long arg1 );
        void copyValue__java_math_MutableBigInteger(
            in ::java::math::MutableBigInteger arg0 );
        void copyValue__org_omg_boxedRMI_seq1_long(
            in ::org::omg::boxedRMI::seq1_long arg0 );
        boolean isOne( );
        boolean isZero( );
        boolean isEven( );
        boolean isOdd( );
        boolean isNormal( );
        ::CORBA::WStringValue toString( );
        void rightShift(
            in long arg0 );
        void leftShift(
            in long arg0 );
        void add(
            in ::java::math::MutableBigInteger arg0 );
        long subtract(
            in ::java::math::MutableBigInteger arg0 );
        void multiply(
            in ::java::math::MutableBigInteger arg0,
            in ::java::math::MutableBigInteger arg1 );
        void mul(
            in long arg0,
            in ::java::math::MutableBigInteger arg1 );
        void divideOneWord(
            in long arg0,
            in ::java::math::MutableBigInteger arg1 );
        void divide(
            in ::java::math::MutableBigInteger arg0,
            in ::java::math::MutableBigInteger arg1,
            in ::java::math::MutableBigInteger arg2 );
        ::java::math::MutableBigInteger hybridGCD(
            in ::java::math::MutableBigInteger arg0 );
        long binaryGcd(
            in long arg0,
            in long arg1 );
        ::java::math::MutableBigInteger mutableModInverse(
            in ::java::math::MutableBigInteger arg0 );
        ::java::math::MutableBigInteger modInverseMP2(
            in long arg0 );
        long inverseMod32(
            in long arg0 );
        ::java::math::MutableBigInteger modInverseBP2(
            in ::java::math::MutableBigInteger arg0,
            in long arg1 );
        ::java::math::MutableBigInteger fixup(
            in ::java::math::MutableBigInteger arg0,
            in ::java::math::MutableBigInteger arg1,
            in long arg2 );
        ::java::math::MutableBigInteger euclidModInverse(
            in long arg0 );
    
    };

};
};

#include "java/math/MutableBigInteger.idl"
#endif

