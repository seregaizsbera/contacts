/**
 * su/sergey/contacts/sessionfacade/DAOSessionFacade.idl
 * Generated by rmic -idl. Do not edit
 * 20 ноября 2005 г. 14:59:49 GMT+03:00
 */


#ifndef __su_sergey_contacts_dto_PersonHandle__

module su {
module sergey {
module contacts {
module dto {

    valuetype PersonHandle;

};
};
};
};

#endif


#ifndef __su_sergey_contacts_person_searchparameters_PersonSearchParameters__

module su {
module sergey {
module contacts {
module person {
module searchparameters {

    valuetype PersonSearchParameters;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_directory_valueobjects_DirectoryRecord__

module su {
module sergey {
module contacts {
module directory {
module valueobjects {

    abstract valuetype DirectoryRecord;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_email_valueobjects_EmailAttributes__

module su {
module sergey {
module contacts {
module email {
module valueobjects {

    abstract valuetype EmailAttributes;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_phone_valueobjects_PhoneAttributes__

module su {
module sergey {
module contacts {
module phone {
module valueobjects {

    abstract valuetype PhoneAttributes;

};
};
};
};
};

#endif


#ifndef __java_io_File__

module java {
module io {

    valuetype File;

};
};

#endif


#ifndef __su_sergey_contacts_supply_searchparameters_SupplySearchParameters__

module su {
module sergey {
module contacts {
module supply {
module searchparameters {

    valuetype SupplySearchParameters;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_person_valueobjects_PersonAttributes__

module su {
module sergey {
module contacts {
module person {
module valueobjects {

    abstract valuetype PersonAttributes;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_directory_valueobjects_handles_DirectoryMetadataHandle__

module su {
module sergey {
module contacts {
module directory {
module valueobjects {
module handles {

    valuetype DirectoryMetadataHandle;

};
};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_dto_EmailHandle__

module su {
module sergey {
module contacts {
module dto {

    valuetype EmailHandle;

};
};
};
};

#endif


#ifndef __su_sergey_contacts_query_valueobjects_QueryResult__

module su {
module sergey {
module contacts {
module query {
module valueobjects {

    abstract valuetype QueryResult;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_dto_PhoneHandle__

module su {
module sergey {
module contacts {
module dto {

    valuetype PhoneHandle;

};
};
};
};

#endif


#ifndef __su_sergey_contacts_call_valueobjects_CallExpenseAttributes__

module su {
module sergey {
module contacts {
module call {
module valueobjects {

    valuetype CallExpenseAttributes;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_dto_SupplyHandle__

module su {
module sergey {
module contacts {
module dto {

    valuetype SupplyHandle;

};
};
};
};

#endif


#ifndef __su_sergey_contacts_person_valueobjects_Person2__

module su {
module sergey {
module contacts {
module person {
module valueobjects {

    valuetype Person2;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_dto_CallExpenseHandle__

module su {
module sergey {
module contacts {
module dto {

    valuetype CallExpenseHandle;

};
};
};
};

#endif


#ifndef __su_sergey_contacts_supply_valueobjects_SupplyAttributes__

module su {
module sergey {
module contacts {
module supply {
module valueobjects {

    abstract valuetype SupplyAttributes;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_directory_valueobjects_DirectoryMetadata__

module su {
module sergey {
module contacts {
module directory {
module valueobjects {

    abstract valuetype DirectoryMetadata;

};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_directory_valueobjects_handles_DirectoryRecordHandle__

module su {
module sergey {
module contacts {
module directory {
module valueobjects {
module handles {

    valuetype DirectoryRecordHandle;

};
};
};
};
};
};

#endif


#ifndef __su_sergey_contacts_supply_valueobjects_Supply2__

module su {
module sergey {
module contacts {
module supply {
module valueobjects {

    valuetype Supply2;

};
};
};
};
};

#endif

#include "su/sergey/contacts/exceptions/DuplicateInstanceEx.idl"
#include "su/sergey/contacts/properties/InvalidPropertyValueEx.idl"
#include "su/sergey/contacts/properties/PropertyNotFoundEx.idl"
#include "su/sergey/contacts/exceptions/MultipleFieldsValidationEx.idl"
#include "su/sergey/contacts/report/ReportEx.idl"
#include "su/sergey/contacts/exceptions/ContactsEx.idl"
#include "javax/ejb/EJBObject.idl"
#include "java/io/Serializable.idl"
#include "org/omg/boxedRMI/su/sergey/contacts/phone/valueobjects/seq1_Phone2.idl"
#include "org/omg/boxedRMI/CORBA/seq1_WStringValue.idl"
#include "org/omg/boxedRMI/su/sergey/contacts/email/valueobjects/seq1_Email2.idl"
#include "orb.idl"

#ifndef __su_sergey_contacts_sessionfacade_DAOSessionFacade__
#define __su_sergey_contacts_sessionfacade_DAOSessionFacade__


module su {
module sergey {
module contacts {
module sessionfacade {

    interface DAOSessionFacade: ::javax::ejb::EJBObject {
    
        ::su::sergey::contacts::directory::valueobjects::DirectoryMetadata findDirectoryMetadata(
            in ::su::sergey::contacts::directory::valueobjects::handles::DirectoryMetadataHandle arg0 ) raises (
            ::su::sergey::contacts::exceptions::ContactsEx );
        ::su::sergey::contacts::directory::valueobjects::DirectoryRecord findDirectoryRecord(
            in ::su::sergey::contacts::directory::valueobjects::handles::DirectoryRecordHandle arg0 ) raises (
            ::su::sergey::contacts::exceptions::ContactsEx );
        void addDirectoryRecord(
            in ::su::sergey::contacts::directory::valueobjects::handles::DirectoryMetadataHandle arg0,
            in ::su::sergey::contacts::directory::valueobjects::DirectoryRecord arg1 ) raises (
            ::su::sergey::contacts::exceptions::ContactsEx );
        void removeDirectoryRecord(
            in ::su::sergey::contacts::directory::valueobjects::handles::DirectoryRecordHandle arg0 ) raises (
            ::su::sergey::contacts::exceptions::ContactsEx );
        void updateDirectoryRecord(
            in ::su::sergey::contacts::directory::valueobjects::handles::DirectoryRecordHandle arg0,
            in ::su::sergey::contacts::directory::valueobjects::DirectoryRecord arg1 ) raises (
            ::su::sergey::contacts::exceptions::ContactsEx );
        ::su::sergey::contacts::query::valueobjects::QueryResult performQuery(
            in ::CORBA::WStringValue arg0 );
        readonly attribute ::org::omg::boxedRMI::CORBA::seq1_WStringValue lastQueries;
        ::su::sergey::contacts::person::valueobjects::Person2 findPerson(
            in ::su::sergey::contacts::dto::PersonHandle arg0 );
        ::su::sergey::contacts::dto::PersonHandle createPerson(
            in ::su::sergey::contacts::person::valueobjects::PersonAttributes arg0 ) raises (
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void updatePerson(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::person::valueobjects::PersonAttributes arg1 ) raises (
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void removePerson(
            in ::su::sergey::contacts::dto::PersonHandle arg0 );
        ::org::omg::boxedRMI::su::sergey::contacts::phone::valueobjects::seq1_Phone2 getPersonPhones(
            in ::su::sergey::contacts::dto::PersonHandle arg0 );
        ::su::sergey::contacts::dto::PhoneHandle addPersonPhone(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::phone::valueobjects::PhoneAttributes arg1 );
        void setBasicPersonPhone(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::dto::PhoneHandle arg1 );
        void removePersonPhone(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::dto::PhoneHandle arg1 );
        void updatePhone(
            in ::su::sergey::contacts::dto::PhoneHandle arg0,
            in ::su::sergey::contacts::phone::valueobjects::PhoneAttributes arg1 );
        ::org::omg::boxedRMI::su::sergey::contacts::email::valueobjects::seq1_Email2 getPersonEmails(
            in ::su::sergey::contacts::dto::PersonHandle arg0 );
        ::su::sergey::contacts::dto::EmailHandle addPersonEmail(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::email::valueobjects::EmailAttributes arg1 );
        void setBasicPersonEmail(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::dto::EmailHandle arg1 );
        void removePersonEmail(
            in ::su::sergey::contacts::dto::PersonHandle arg0,
            in ::su::sergey::contacts::dto::EmailHandle arg1 );
        void updateEmail(
            in ::su::sergey::contacts::dto::EmailHandle arg0,
            in ::su::sergey::contacts::email::valueobjects::EmailAttributes arg1 );
        ::java::io::Serializable getSystemPropertyValue(
            in ::CORBA::WStringValue arg0 ) raises (
            ::su::sergey::contacts::properties::PropertyNotFoundEx );
        void setSystemPropertyValue__CORBA_WStringValue__java_io_Serializable(
            in ::CORBA::WStringValue arg0,
            in ::java::io::Serializable arg1 ) raises (
            ::su::sergey::contacts::properties::PropertyNotFoundEx );
        void setSystemPropertyValue__CORBA_WStringValue__CORBA_WStringValue(
            in ::CORBA::WStringValue arg0,
            in ::CORBA::WStringValue arg1 ) raises (
            ::su::sergey::contacts::properties::InvalidPropertyValueEx,
            ::su::sergey::contacts::properties::PropertyNotFoundEx );
        ::su::sergey::contacts::supply::valueobjects::Supply2 findSupply(
            in ::su::sergey::contacts::dto::SupplyHandle arg0 );
        ::su::sergey::contacts::dto::SupplyHandle createSupply(
            in ::su::sergey::contacts::supply::valueobjects::SupplyAttributes arg0 ) raises (
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void updateSupply(
            in ::su::sergey::contacts::dto::SupplyHandle arg0,
            in ::su::sergey::contacts::supply::valueobjects::SupplyAttributes arg1 ) raises (
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void removeSupply(
            in ::su::sergey::contacts::dto::SupplyHandle arg0 );
        ::org::omg::boxedRMI::su::sergey::contacts::phone::valueobjects::seq1_Phone2 getSupplyPhones(
            in ::su::sergey::contacts::dto::SupplyHandle arg0 );
        ::su::sergey::contacts::dto::PhoneHandle addSupplyPhone(
            in ::su::sergey::contacts::dto::SupplyHandle arg0,
            in ::su::sergey::contacts::phone::valueobjects::PhoneAttributes arg1 );
        void removeSupplyPhone(
            in ::su::sergey::contacts::dto::SupplyHandle arg0,
            in ::su::sergey::contacts::dto::PhoneHandle arg1 );
        ::org::omg::boxedRMI::su::sergey::contacts::email::valueobjects::seq1_Email2 getSupplyEmails(
            in ::su::sergey::contacts::dto::SupplyHandle arg0 );
        ::su::sergey::contacts::dto::EmailHandle addSupplyEmail(
            in ::su::sergey::contacts::dto::SupplyHandle arg0,
            in ::su::sergey::contacts::email::valueobjects::EmailAttributes arg1 );
        void removeSupplyEmail(
            in ::su::sergey::contacts::dto::SupplyHandle arg0,
            in ::su::sergey::contacts::dto::EmailHandle arg1 );
        ::java::io::File buildPersonReport(
            in ::su::sergey::contacts::person::searchparameters::PersonSearchParameters arg0,
            in ::CORBA::WStringValue arg1 ) raises (
            ::su::sergey::contacts::report::ReportEx );
        ::java::io::File buildSupplyReport(
            in ::su::sergey::contacts::supply::searchparameters::SupplySearchParameters arg0,
            in ::CORBA::WStringValue arg1 ) raises (
            ::su::sergey::contacts::report::ReportEx );
        ::su::sergey::contacts::call::valueobjects::CallExpenseAttributes findCallExpense(
            in ::su::sergey::contacts::dto::CallExpenseHandle arg0 );
        ::su::sergey::contacts::dto::CallExpenseHandle createCallExpense(
            in ::su::sergey::contacts::call::valueobjects::CallExpenseAttributes arg0 ) raises (
            ::su::sergey::contacts::exceptions::DuplicateInstanceEx,
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void updateCallExpense(
            in ::su::sergey::contacts::dto::CallExpenseHandle arg0,
            in ::su::sergey::contacts::call::valueobjects::CallExpenseAttributes arg1 ) raises (
            ::su::sergey::contacts::exceptions::DuplicateInstanceEx,
            ::su::sergey::contacts::exceptions::MultipleFieldsValidationEx );
        void removeCallExpense(
            in ::su::sergey::contacts::dto::CallExpenseHandle arg0 );
    
    };

#pragma ID DAOSessionFacade "RMI:su.sergey.contacts.sessionfacade.DAOSessionFacade:0000000000000000"

};
};
};
};

#include "su/sergey/contacts/dto/PersonHandle.idl"
#include "su/sergey/contacts/person/searchparameters/PersonSearchParameters.idl"
#include "su/sergey/contacts/directory/valueobjects/DirectoryRecord.idl"
#include "su/sergey/contacts/email/valueobjects/EmailAttributes.idl"
#include "su/sergey/contacts/phone/valueobjects/PhoneAttributes.idl"
#include "java/io/File.idl"
#include "su/sergey/contacts/supply/searchparameters/SupplySearchParameters.idl"
#include "su/sergey/contacts/person/valueobjects/PersonAttributes.idl"
#include "su/sergey/contacts/directory/valueobjects/handles/DirectoryMetadataHandle.idl"
#include "su/sergey/contacts/dto/EmailHandle.idl"
#include "su/sergey/contacts/query/valueobjects/QueryResult.idl"
#include "su/sergey/contacts/dto/PhoneHandle.idl"
#include "su/sergey/contacts/call/valueobjects/CallExpenseAttributes.idl"
#include "su/sergey/contacts/dto/SupplyHandle.idl"
#include "su/sergey/contacts/person/valueobjects/Person2.idl"
#include "su/sergey/contacts/dto/CallExpenseHandle.idl"
#include "su/sergey/contacts/supply/valueobjects/SupplyAttributes.idl"
#include "su/sergey/contacts/directory/valueobjects/DirectoryMetadata.idl"
#include "su/sergey/contacts/directory/valueobjects/handles/DirectoryRecordHandle.idl"
#include "su/sergey/contacts/supply/valueobjects/Supply2.idl"
#endif

