#! /usr/bin/perl -w
use strict;

sub process_file($);
sub print_java_interface($$$$$);
sub print_sql($$$);

my $sql_table;
my $sql_file;
my $java_package;
my $java_interface;
my $comment;
my @values;

if ($#ARGV < 0) {
    print STDERR "Usage: $0 cfg-file1 cfg-file2...\n";
    exit 1;
}

foreach my $file (@ARGV) {
    process_file($file);
}

sub process_file($) {
    my ($file) = @_;

    if (! -r $file) { 
        print STDERR "File $file doesn't exist or isn't readable.\n";
        return;
    }
    open(PROG, $file);
    my $prog;
    while (<PROG>) {
        $prog .= $_;
    }
    eval $prog;

    open(OUT, "> $java_interface.java") or die;
    print_java_interface($sql_table, $java_package, $java_interface, $comment, \@values);
    close(OUT);

    open(OUT, "> $sql_file") or die;
    print_sql($sql_table, $comment, \@values);
    close(OUT);
}

sub print_java_interface($$$$$) {
    my ($table, $package, $interface, $comment, $values) = @_;
    my $time = gmtime();
    print OUT <<EOF
/*
 * Generated by $0 at $time
 */
package $package;

/**
 * $interface - $comment
 * Значения, определенные в этом интерфейсе описаны в таблице $table
 */
public interface $interface {
EOF
    ;
    my $index = 0;
    foreach my $value (@$values) {
        if ($index++) {
            print OUT "\n";
        }
        print OUT "    /**\n     * $value->[2]\n     */\n";
        print OUT "    Integer $value->[1] = new Integer($value->[0]);\n";
    }
    print OUT "}\n";
}

sub print_sql($$$) {
    my ($table, $comment, $values) = @_;
    print OUT "-- Generated by table.perl script at " . gmtime() . "\n\n";
    print OUT <<EOF
DROP TABLE $table;

BEGIN;

CREATE TABLE $table (
    id int4 NOT NULL
            PRIMARY KEY,
    name text CHECK (name <> '')
);

COMMENT ON TABLE $table IS '$comment';

COMMENT ON COLUMN $table.id IS 'Числовое значение';
COMMENT ON COLUMN $table.name IS 'Смысловое значение';

REVOKE ALL ON $table FROM PUBLIC;
REVOKE ALL ON $table FROM j2eeagent;
REVOKE ALL ON $table FROM apacheagent;
GRANT SELECT, INSERT, UPDATE, DELETE ON $table TO j2eeagent;
GRANT SELECT, INSERT, UPDATE, DELETE ON $table TO apacheagent;

EOF
    ;
    my $index = 0;
    foreach my $value (@$values) {
        print OUT "INSERT INTO $table (id, name) VALUES ($value->[0], '$value->[2]');\n";
    }
    print OUT <<EOF

COMMIT;
EOF
}
